name: Automatic releasing after merge to main

on:
  pull_request:
    branches:
      - master
    types: [closed]

jobs:
  release:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Taskfile
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install modules
        run: task install

      - name: Configure git
        run: |
          git config --global user.email "ci@journify.io"
          git config --global user.name "Journify CI bot"
          git checkout ${{ github.head_ref }}

      - name: Check for a potential new release
        id: release_check
        run: |
          pull_request_title="${{ github.event.pull_request.title }}"
          new_release_regex='(\[MAJOR\]|\[MINOR\]|\[PATCH\])\ .+'

          if [[ $pull_request_title =~ $new_release_regex ]]; then
            current_version=$(python -c "from journify import VERSION; print(VERSION)")
            tag_name="v$current_version"
            echo "new_release=true" >> $GITHUB_OUTPUT
            echo "tag_name=$tag_name" >> $GITHUB_OUTPUT
          fi

      - name: Release to Github
        if: steps.release_check.outputs.new_release == 'true'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.release_check.outputs.tag_name }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release to PyPI
        run: task release
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
